@model RemoteSchoolWebApp.Models.AssignmentStudentsViewModel

<h1>Details</h1>

<div>
    <h4>Assignment</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Assignment.Date)
        </dt>
        @{
            string date = Model.Assignment.Date.ToShortDateString();
        }
        <dd class="col-sm-10">
            @Html.DisplayFor(model => date)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Assignment.Description)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Assignment.Description)
        </dd>
    </dl>
</div>
<div>
    <a asp-action="EditAssignment" asp-route-id="@Model.Assignment.Id">Edit</a> |
    <a asp-action="Assignments">Back to List</a>
</div><br />
<div>
    <form asp-action="AssignmentDetails">
        @for (int i = 0; i < Model.Students.Count(); i++)
        {
            if (Model.Students[i].Grades.Count == 0)
            {
                Model.Students[i].Grades.Add(new Grade { Value = 0, AssignmentId = Model.Assignment.Id, StudentId = Model.Students[i].Id });
            }
            string fullName = Model.Students[i].FirstName + " " + Model.Students[i].LastName;
            @Html.DisplayFor(modelItem => fullName)

            <input asp-for="@Model.Students[i].Grades[0].AssignmentId" type="hidden" />
            <input asp-for="@Model.Students[i].Grades[0].StudentId" type="hidden" />
            <select asp-for="@Model.Students[i].Grades[0].Value" asp-items="Model.PossibleGrades"></select><br />
        }
        <input type="submit" value="Save" class="btn btn-primary" />
    </form>
</div>
